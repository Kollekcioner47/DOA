#Сетевой гит
#регистрируемся на гитхабе https://github.com/ и создаём там свой репозиторий
#копируем ssh-адрес нашего репозитория, он выглядит похоже на https://github.com/Kollekcioner47/test.git
#генерируем ssh-ключ
ssh-keygen
#нажимем enter два раза и у нас сгенерируется пара ключей в домашнем каталоге пользователя в папке .ssh
#вводим пароль для ключа
#Далее нужно зарегистрировать ключ на github
#Выведем содержимое файла и скопируем его
cat /home/engineer/.ssh/id_rsa.pub
#регистрируем ключ на github(настройки->ssh and gpg keys->new ssh key
#подключаем этот репозиторий к нашему локальному гиту
git remote add origin %урл вашего подключения%
#посмотрим наш репозиторий
git remote -v
#Попробуем отправить наш проект на github
git push origin master
#Гит спросит вас, уверены ли вы в этом - отвечаем утвердительно
#попробуем наоборот скачать проект с сервера, находясь в домашнем каталогу
cd ..
git clone %урл вашего подключения%
#У нас скачался проект и появилась новая папка с названием вашего репозитория
ls -la
#как получить изменения из первой папки новых изменений в проекте?
cd git
git pull origin master
#Если вас несколько вы неизбежно столкнетесь с отказом pusha из-за расхождения веток, от этого помогает несколько способов
1) сделать git pull перед git push, что вызовет merge локальных и удалённых данных
2) сделать git fetch origin, что сдвинит указатели коммитов
3) сделать git merge origin/master, что также сделает merge локальных и удалённых данных
4) либо мы можем сделать постояную репликацию через git push --set-upstream origin master 
5) Если мы настроены серьёзно и нам плевать на последствия, то мы можем усилить обычный push
git push origin master -f